Nonterminals useless in grammar

    VarDeclList
    BinOp


Rules useless in grammar

   57 VarDeclList: ε
   58            | VarDecl VarDeclList
   59            | VarDecl

   60 BinOp: PLUS
   61      | MINUS
   62      | MULTIPLY
   63      | DIVIDE


State 1 conflicts: 1 reduce/reduce
State 2 conflicts: 1 reduce/reduce
State 24 conflicts: 11 shift/reduce
State 55 conflicts: 1 reduce/reduce
State 84 conflicts: 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl
    4         | FunDeclList

    5 Decl: VarDecl
    6     | StmtList

    7 VarDecl: Type ID SEMICOLON
    8        | Type ID LBRACKET INTEGER RBRACKET SEMICOLON

    9 FunDeclList: FunDecl
   10            | FunDecl FunDeclList

   11 $@1: ε

   12 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN Block

   13 ParamDecList: ε
   14             | ParamDecListTail

   15 ParamDecListTail: ParamDecl
   16                 | ParamDecl ParamDecListTail

   17 ParamDecl: Type ID

   18 Block: LBRACE DeclList RBRACE

   19 Type: INT
   20     | FLOAT
   21     | CHAR

   22 StmtList: Stmt
   23         | Stmt StmtList

   24 Stmt: SEMICOLON
   25     | Expr SEMICOLON
   26     | RETURN Expr SEMICOLON
   27     | WRITE Expr SEMICOLON
   28     | WRITELN SEMICOLON
   29     | SWRITE STRING SEMICOLON

   30 ArrayExpr: ID LBRACKET INTEGER RBRACKET EQ Primary
   31          | ID EQ ID LBRACKET INTEGER RBRACKET

   32 Expr: Primary
   33     | MathExpr
   34     | ArrayExpr
   35     | FunCall
   36     | UnaryOp Expr
   37     | ID EQ Expr
   38     | ID LBRACKET INTEGER RBRACKET

   39 FunCall: ID LPAREN ParamList RPAREN

   40 Primary: ID
   41        | DECIMAL
   42        | INTEGER
   43        | CHARACTER

   44 MathExpr: Trm
   45         | MathExpr MINUS Trm
   46         | MathExpr PLUS Trm

   47 Trm: Factor
   48    | Trm MULTIPLY Factor
   49    | Trm DIVIDE Factor

   50 Factor: ID
   51       | INTEGER
   52       | LPAREN MathExpr RPAREN

   53 ParamList: ε

   54 $@2: ε

   55 ParamList: Primary $@2 ParamList

   56 UnaryOp: MINUS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 7 8 12 17 30 31 37 38 39 40 50
    INTEGER <number> (259) 8 30 31 38 42 51
    DECIMAL <floatValue> (260) 41
    STRING <string> (261) 29
    SEMICOLON <string> (262) 7 8 24 25 26 27 28 29
    EQ <string> (263) 30 31 37
    WRITE <string> (264) 27
    SWRITE <string> (265) 29
    FUNC <string> (266) 12
    PLUS <string> (267) 46
    MINUS <string> (268) 45 56
    MULTIPLY <string> (269) 48
    DIVIDE <string> (270) 49
    LBRACKET <string> (271) 8 30 31 38
    RBRACKET <string> (272) 8 30 31 38
    LPAREN <string> (273) 12 39 52
    RPAREN <string> (274) 12 39 52
    LBRACE <string> (275) 18
    RBRACE <string> (276) 18
    INT <string> (277) 19
    CHAR <string> (278) 21
    FLOAT <string> (279) 20
    RETURN <string> (280) 26
    WRITELN <string> (281) 28
    CHARACTER <string> (282) 43


Nonterminals, with rules where they appear

    $accept (28)
        on left: 0
    Program <ast> (29)
        on left: 1
        on right: 0
    DeclList <ast> (30)
        on left: 2 3 4
        on right: 1 2 18
    Decl <ast> (31)
        on left: 5 6
        on right: 2 3
    VarDecl <ast> (32)
        on left: 7 8
        on right: 5
    FunDeclList <ast> (33)
        on left: 9 10
        on right: 4 10
    FunDecl <ast> (34)
        on left: 12
        on right: 9 10
    $@1 (35)
        on left: 11
        on right: 12
    ParamDecList <ast> (36)
        on left: 13 14
        on right: 12
    ParamDecListTail <ast> (37)
        on left: 15 16
        on right: 14 16
    ParamDecl <ast> (38)
        on left: 17
        on right: 15 16
    Block <ast> (39)
        on left: 18
        on right: 12
    Type <ast> (40)
        on left: 19 20 21
        on right: 7 8 12 17
    StmtList <ast> (41)
        on left: 22 23
        on right: 6 23
    Stmt <ast> (42)
        on left: 24 25 26 27 28 29
        on right: 22 23
    ArrayExpr <ast> (43)
        on left: 30 31
        on right: 34
    Expr <ast> (44)
        on left: 32 33 34 35 36 37 38
        on right: 25 26 27 36 37
    FunCall <ast> (45)
        on left: 39
        on right: 35
    Primary <ast> (46)
        on left: 40 41 42 43
        on right: 30 32 55
    MathExpr <ast> (47)
        on left: 44 45 46
        on right: 33 45 46 52
    Trm <ast> (48)
        on left: 47 48 49
        on right: 44 45 46 48 49
    Factor <ast> (49)
        on left: 50 51 52
        on right: 47 48 49
    ParamList <ast> (50)
        on left: 53 55
        on right: 39 55
    $@2 (51)
        on left: 54
        on right: 55
    UnaryOp <ast> (52)
        on left: 56
        on right: 36


State 0

    0 $accept: • Program $end

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    DECIMAL    shift, and go to state 3
    SEMICOLON  shift, and go to state 4
    WRITE      shift, and go to state 5
    SWRITE     shift, and go to state 6
    FUNC       shift, and go to state 7
    MINUS      shift, and go to state 8
    LPAREN     shift, and go to state 9
    INT        shift, and go to state 10
    CHAR       shift, and go to state 11
    FLOAT      shift, and go to state 12
    RETURN     shift, and go to state 13
    WRITELN    shift, and go to state 14
    CHARACTER  shift, and go to state 15

    Program      go to state 16
    DeclList     go to state 17
    Decl         go to state 18
    VarDecl      go to state 19
    FunDeclList  go to state 20
    FunDecl      go to state 21
    Type         go to state 22
    StmtList     go to state 23
    Stmt         go to state 24
    ArrayExpr    go to state 25
    Expr         go to state 26
    FunCall      go to state 27
    Primary      go to state 28
    MathExpr     go to state 29
    Trm          go to state 30
    Factor       go to state 31
    UnaryOp      go to state 32


State 1

   30 ArrayExpr: ID • LBRACKET INTEGER RBRACKET EQ Primary
   31          | ID • EQ ID LBRACKET INTEGER RBRACKET
   37 Expr: ID • EQ Expr
   38     | ID • LBRACKET INTEGER RBRACKET
   39 FunCall: ID • LPAREN ParamList RPAREN
   40 Primary: ID •
   50 Factor: ID •

    EQ        shift, and go to state 33
    LBRACKET  shift, and go to state 34
    LPAREN    shift, and go to state 35

    SEMICOLON  reduce using rule 40 (Primary)
    SEMICOLON  [reduce using rule 50 (Factor)]
    $default   reduce using rule 50 (Factor)


State 2

   42 Primary: INTEGER •
   51 Factor: INTEGER •

    SEMICOLON  reduce using rule 42 (Primary)
    SEMICOLON  [reduce using rule 51 (Factor)]
    $default   reduce using rule 51 (Factor)


State 3

   41 Primary: DECIMAL •

    $default  reduce using rule 41 (Primary)


State 4

   24 Stmt: SEMICOLON •

    $default  reduce using rule 24 (Stmt)


State 5

   27 Stmt: WRITE • Expr SEMICOLON

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    DECIMAL    shift, and go to state 3
    MINUS      shift, and go to state 8
    LPAREN     shift, and go to state 9
    CHARACTER  shift, and go to state 15

    ArrayExpr  go to state 25
    Expr       go to state 36
    FunCall    go to state 27
    Primary    go to state 28
    MathExpr   go to state 29
    Trm        go to state 30
    Factor     go to state 31
    UnaryOp    go to state 32


State 6

   29 Stmt: SWRITE • STRING SEMICOLON

    STRING  shift, and go to state 37


State 7

   12 FunDecl: FUNC • Type ID LPAREN $@1 ParamDecList RPAREN Block

    INT    shift, and go to state 10
    CHAR   shift, and go to state 11
    FLOAT  shift, and go to state 12

    Type  go to state 38


State 8

   56 UnaryOp: MINUS •

    $default  reduce using rule 56 (UnaryOp)


State 9

   52 Factor: LPAREN • MathExpr RPAREN

    ID       shift, and go to state 39
    INTEGER  shift, and go to state 40
    LPAREN   shift, and go to state 9

    MathExpr  go to state 41
    Trm       go to state 30
    Factor    go to state 31


State 10

   19 Type: INT •

    $default  reduce using rule 19 (Type)


State 11

   21 Type: CHAR •

    $default  reduce using rule 21 (Type)


State 12

   20 Type: FLOAT •

    $default  reduce using rule 20 (Type)


State 13

   26 Stmt: RETURN • Expr SEMICOLON

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    DECIMAL    shift, and go to state 3
    MINUS      shift, and go to state 8
    LPAREN     shift, and go to state 9
    CHARACTER  shift, and go to state 15

    ArrayExpr  go to state 25
    Expr       go to state 42
    FunCall    go to state 27
    Primary    go to state 28
    MathExpr   go to state 29
    Trm        go to state 30
    Factor     go to state 31
    UnaryOp    go to state 32


State 14

   28 Stmt: WRITELN • SEMICOLON

    SEMICOLON  shift, and go to state 43


State 15

   43 Primary: CHARACTER •

    $default  reduce using rule 43 (Primary)


State 16

    0 $accept: Program • $end

    $end  shift, and go to state 44


State 17

    1 Program: DeclList •

    $default  reduce using rule 1 (Program)


State 18

    2 DeclList: Decl • DeclList
    3         | Decl •

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    DECIMAL    shift, and go to state 3
    SEMICOLON  shift, and go to state 4
    WRITE      shift, and go to state 5
    SWRITE     shift, and go to state 6
    FUNC       shift, and go to state 7
    MINUS      shift, and go to state 8
    LPAREN     shift, and go to state 9
    INT        shift, and go to state 10
    CHAR       shift, and go to state 11
    FLOAT      shift, and go to state 12
    RETURN     shift, and go to state 13
    WRITELN    shift, and go to state 14
    CHARACTER  shift, and go to state 15

    $default  reduce using rule 3 (DeclList)

    DeclList     go to state 45
    Decl         go to state 18
    VarDecl      go to state 19
    FunDeclList  go to state 20
    FunDecl      go to state 21
    Type         go to state 22
    StmtList     go to state 23
    Stmt         go to state 24
    ArrayExpr    go to state 25
    Expr         go to state 26
    FunCall      go to state 27
    Primary      go to state 28
    MathExpr     go to state 29
    Trm          go to state 30
    Factor       go to state 31
    UnaryOp      go to state 32


State 19

    5 Decl: VarDecl •

    $default  reduce using rule 5 (Decl)


State 20

    4 DeclList: FunDeclList •

    $default  reduce using rule 4 (DeclList)


State 21

    9 FunDeclList: FunDecl •
   10            | FunDecl • FunDeclList

    FUNC  shift, and go to state 7

    $default  reduce using rule 9 (FunDeclList)

    FunDeclList  go to state 46
    FunDecl      go to state 21


State 22

    7 VarDecl: Type • ID SEMICOLON
    8        | Type • ID LBRACKET INTEGER RBRACKET SEMICOLON

    ID  shift, and go to state 47


State 23

    6 Decl: StmtList •

    $default  reduce using rule 6 (Decl)


State 24

   22 StmtList: Stmt •
   23         | Stmt • StmtList

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    DECIMAL    shift, and go to state 3
    SEMICOLON  shift, and go to state 4
    WRITE      shift, and go to state 5
    SWRITE     shift, and go to state 6
    MINUS      shift, and go to state 8
    LPAREN     shift, and go to state 9
    RETURN     shift, and go to state 13
    WRITELN    shift, and go to state 14
    CHARACTER  shift, and go to state 15

    ID         [reduce using rule 22 (StmtList)]
    INTEGER    [reduce using rule 22 (StmtList)]
    DECIMAL    [reduce using rule 22 (StmtList)]
    SEMICOLON  [reduce using rule 22 (StmtList)]
    WRITE      [reduce using rule 22 (StmtList)]
    SWRITE     [reduce using rule 22 (StmtList)]
    MINUS      [reduce using rule 22 (StmtList)]
    LPAREN     [reduce using rule 22 (StmtList)]
    RETURN     [reduce using rule 22 (StmtList)]
    WRITELN    [reduce using rule 22 (StmtList)]
    CHARACTER  [reduce using rule 22 (StmtList)]
    $default   reduce using rule 22 (StmtList)

    StmtList   go to state 48
    Stmt       go to state 24
    ArrayExpr  go to state 25
    Expr       go to state 26
    FunCall    go to state 27
    Primary    go to state 28
    MathExpr   go to state 29
    Trm        go to state 30
    Factor     go to state 31
    UnaryOp    go to state 32


State 25

   34 Expr: ArrayExpr •

    $default  reduce using rule 34 (Expr)


State 26

   25 Stmt: Expr • SEMICOLON

    SEMICOLON  shift, and go to state 49


State 27

   35 Expr: FunCall •

    $default  reduce using rule 35 (Expr)


State 28

   32 Expr: Primary •

    $default  reduce using rule 32 (Expr)


State 29

   33 Expr: MathExpr •
   45 MathExpr: MathExpr • MINUS Trm
   46         | MathExpr • PLUS Trm

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51

    $default  reduce using rule 33 (Expr)


State 30

   44 MathExpr: Trm •
   48 Trm: Trm • MULTIPLY Factor
   49    | Trm • DIVIDE Factor

    MULTIPLY  shift, and go to state 52
    DIVIDE    shift, and go to state 53

    $default  reduce using rule 44 (MathExpr)


State 31

   47 Trm: Factor •

    $default  reduce using rule 47 (Trm)


State 32

   36 Expr: UnaryOp • Expr

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    DECIMAL    shift, and go to state 3
    MINUS      shift, and go to state 8
    LPAREN     shift, and go to state 9
    CHARACTER  shift, and go to state 15

    ArrayExpr  go to state 25
    Expr       go to state 54
    FunCall    go to state 27
    Primary    go to state 28
    MathExpr   go to state 29
    Trm        go to state 30
    Factor     go to state 31
    UnaryOp    go to state 32


State 33

   31 ArrayExpr: ID EQ • ID LBRACKET INTEGER RBRACKET
   37 Expr: ID EQ • Expr

    ID         shift, and go to state 55
    INTEGER    shift, and go to state 2
    DECIMAL    shift, and go to state 3
    MINUS      shift, and go to state 8
    LPAREN     shift, and go to state 9
    CHARACTER  shift, and go to state 15

    ArrayExpr  go to state 25
    Expr       go to state 56
    FunCall    go to state 27
    Primary    go to state 28
    MathExpr   go to state 29
    Trm        go to state 30
    Factor     go to state 31
    UnaryOp    go to state 32


State 34

   30 ArrayExpr: ID LBRACKET • INTEGER RBRACKET EQ Primary
   38 Expr: ID LBRACKET • INTEGER RBRACKET

    INTEGER  shift, and go to state 57


State 35

   39 FunCall: ID LPAREN • ParamList RPAREN

    ID         shift, and go to state 58
    INTEGER    shift, and go to state 59
    DECIMAL    shift, and go to state 3
    CHARACTER  shift, and go to state 15

    $default  reduce using rule 53 (ParamList)

    Primary    go to state 60
    ParamList  go to state 61


State 36

   27 Stmt: WRITE Expr • SEMICOLON

    SEMICOLON  shift, and go to state 62


State 37

   29 Stmt: SWRITE STRING • SEMICOLON

    SEMICOLON  shift, and go to state 63


State 38

   12 FunDecl: FUNC Type • ID LPAREN $@1 ParamDecList RPAREN Block

    ID  shift, and go to state 64


State 39

   50 Factor: ID •

    $default  reduce using rule 50 (Factor)


State 40

   51 Factor: INTEGER •

    $default  reduce using rule 51 (Factor)


State 41

   45 MathExpr: MathExpr • MINUS Trm
   46         | MathExpr • PLUS Trm
   52 Factor: LPAREN MathExpr • RPAREN

    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    RPAREN  shift, and go to state 65


State 42

   26 Stmt: RETURN Expr • SEMICOLON

    SEMICOLON  shift, and go to state 66


State 43

   28 Stmt: WRITELN SEMICOLON •

    $default  reduce using rule 28 (Stmt)


State 44

    0 $accept: Program $end •

    $default  accept


State 45

    2 DeclList: Decl DeclList •

    $default  reduce using rule 2 (DeclList)


State 46

   10 FunDeclList: FunDecl FunDeclList •

    $default  reduce using rule 10 (FunDeclList)


State 47

    7 VarDecl: Type ID • SEMICOLON
    8        | Type ID • LBRACKET INTEGER RBRACKET SEMICOLON

    SEMICOLON  shift, and go to state 67
    LBRACKET   shift, and go to state 68


State 48

   23 StmtList: Stmt StmtList •

    $default  reduce using rule 23 (StmtList)


State 49

   25 Stmt: Expr SEMICOLON •

    $default  reduce using rule 25 (Stmt)


State 50

   46 MathExpr: MathExpr PLUS • Trm

    ID       shift, and go to state 39
    INTEGER  shift, and go to state 40
    LPAREN   shift, and go to state 9

    Trm     go to state 69
    Factor  go to state 31


State 51

   45 MathExpr: MathExpr MINUS • Trm

    ID       shift, and go to state 39
    INTEGER  shift, and go to state 40
    LPAREN   shift, and go to state 9

    Trm     go to state 70
    Factor  go to state 31


State 52

   48 Trm: Trm MULTIPLY • Factor

    ID       shift, and go to state 39
    INTEGER  shift, and go to state 40
    LPAREN   shift, and go to state 9

    Factor  go to state 71


State 53

   49 Trm: Trm DIVIDE • Factor

    ID       shift, and go to state 39
    INTEGER  shift, and go to state 40
    LPAREN   shift, and go to state 9

    Factor  go to state 72


State 54

   36 Expr: UnaryOp Expr •

    $default  reduce using rule 36 (Expr)


State 55

   30 ArrayExpr: ID • LBRACKET INTEGER RBRACKET EQ Primary
   31          | ID • EQ ID LBRACKET INTEGER RBRACKET
   31          | ID EQ ID • LBRACKET INTEGER RBRACKET
   37 Expr: ID • EQ Expr
   38     | ID • LBRACKET INTEGER RBRACKET
   39 FunCall: ID • LPAREN ParamList RPAREN
   40 Primary: ID •
   50 Factor: ID •

    EQ        shift, and go to state 33
    LBRACKET  shift, and go to state 73
    LPAREN    shift, and go to state 35

    SEMICOLON  reduce using rule 40 (Primary)
    SEMICOLON  [reduce using rule 50 (Factor)]
    $default   reduce using rule 50 (Factor)


State 56

   37 Expr: ID EQ Expr •

    $default  reduce using rule 37 (Expr)


State 57

   30 ArrayExpr: ID LBRACKET INTEGER • RBRACKET EQ Primary
   38 Expr: ID LBRACKET INTEGER • RBRACKET

    RBRACKET  shift, and go to state 74


State 58

   40 Primary: ID •

    $default  reduce using rule 40 (Primary)


State 59

   42 Primary: INTEGER •

    $default  reduce using rule 42 (Primary)


State 60

   55 ParamList: Primary • $@2 ParamList

    $default  reduce using rule 54 ($@2)

    $@2  go to state 75


State 61

   39 FunCall: ID LPAREN ParamList • RPAREN

    RPAREN  shift, and go to state 76


State 62

   27 Stmt: WRITE Expr SEMICOLON •

    $default  reduce using rule 27 (Stmt)


State 63

   29 Stmt: SWRITE STRING SEMICOLON •

    $default  reduce using rule 29 (Stmt)


State 64

   12 FunDecl: FUNC Type ID • LPAREN $@1 ParamDecList RPAREN Block

    LPAREN  shift, and go to state 77


State 65

   52 Factor: LPAREN MathExpr RPAREN •

    $default  reduce using rule 52 (Factor)


State 66

   26 Stmt: RETURN Expr SEMICOLON •

    $default  reduce using rule 26 (Stmt)


State 67

    7 VarDecl: Type ID SEMICOLON •

    $default  reduce using rule 7 (VarDecl)


State 68

    8 VarDecl: Type ID LBRACKET • INTEGER RBRACKET SEMICOLON

    INTEGER  shift, and go to state 78


State 69

   46 MathExpr: MathExpr PLUS Trm •
   48 Trm: Trm • MULTIPLY Factor
   49    | Trm • DIVIDE Factor

    MULTIPLY  shift, and go to state 52
    DIVIDE    shift, and go to state 53

    $default  reduce using rule 46 (MathExpr)


State 70

   45 MathExpr: MathExpr MINUS Trm •
   48 Trm: Trm • MULTIPLY Factor
   49    | Trm • DIVIDE Factor

    MULTIPLY  shift, and go to state 52
    DIVIDE    shift, and go to state 53

    $default  reduce using rule 45 (MathExpr)


State 71

   48 Trm: Trm MULTIPLY Factor •

    $default  reduce using rule 48 (Trm)


State 72

   49 Trm: Trm DIVIDE Factor •

    $default  reduce using rule 49 (Trm)


State 73

   30 ArrayExpr: ID LBRACKET • INTEGER RBRACKET EQ Primary
   31          | ID EQ ID LBRACKET • INTEGER RBRACKET
   38 Expr: ID LBRACKET • INTEGER RBRACKET

    INTEGER  shift, and go to state 79


State 74

   30 ArrayExpr: ID LBRACKET INTEGER RBRACKET • EQ Primary
   38 Expr: ID LBRACKET INTEGER RBRACKET •

    EQ  shift, and go to state 80

    $default  reduce using rule 38 (Expr)


State 75

   55 ParamList: Primary $@2 • ParamList

    ID         shift, and go to state 58
    INTEGER    shift, and go to state 59
    DECIMAL    shift, and go to state 3
    CHARACTER  shift, and go to state 15

    $default  reduce using rule 53 (ParamList)

    Primary    go to state 60
    ParamList  go to state 81


State 76

   39 FunCall: ID LPAREN ParamList RPAREN •

    $default  reduce using rule 39 (FunCall)


State 77

   12 FunDecl: FUNC Type ID LPAREN • $@1 ParamDecList RPAREN Block

    $default  reduce using rule 11 ($@1)

    $@1  go to state 82


State 78

    8 VarDecl: Type ID LBRACKET INTEGER • RBRACKET SEMICOLON

    RBRACKET  shift, and go to state 83


State 79

   30 ArrayExpr: ID LBRACKET INTEGER • RBRACKET EQ Primary
   31          | ID EQ ID LBRACKET INTEGER • RBRACKET
   38 Expr: ID LBRACKET INTEGER • RBRACKET

    RBRACKET  shift, and go to state 84


State 80

   30 ArrayExpr: ID LBRACKET INTEGER RBRACKET EQ • Primary

    ID         shift, and go to state 58
    INTEGER    shift, and go to state 59
    DECIMAL    shift, and go to state 3
    CHARACTER  shift, and go to state 15

    Primary  go to state 85


State 81

   55 ParamList: Primary $@2 ParamList •

    $default  reduce using rule 55 (ParamList)


State 82

   12 FunDecl: FUNC Type ID LPAREN $@1 • ParamDecList RPAREN Block

    INT    shift, and go to state 10
    CHAR   shift, and go to state 11
    FLOAT  shift, and go to state 12

    $default  reduce using rule 13 (ParamDecList)

    ParamDecList      go to state 86
    ParamDecListTail  go to state 87
    ParamDecl         go to state 88
    Type              go to state 89


State 83

    8 VarDecl: Type ID LBRACKET INTEGER RBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 90


State 84

   30 ArrayExpr: ID LBRACKET INTEGER RBRACKET • EQ Primary
   31          | ID EQ ID LBRACKET INTEGER RBRACKET •
   38 Expr: ID LBRACKET INTEGER RBRACKET •

    EQ  shift, and go to state 80

    SEMICOLON  reduce using rule 31 (ArrayExpr)
    SEMICOLON  [reduce using rule 38 (Expr)]
    $default   reduce using rule 31 (ArrayExpr)


State 85

   30 ArrayExpr: ID LBRACKET INTEGER RBRACKET EQ Primary •

    $default  reduce using rule 30 (ArrayExpr)


State 86

   12 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList • RPAREN Block

    RPAREN  shift, and go to state 91


State 87

   14 ParamDecList: ParamDecListTail •

    $default  reduce using rule 14 (ParamDecList)


State 88

   15 ParamDecListTail: ParamDecl •
   16                 | ParamDecl • ParamDecListTail

    INT    shift, and go to state 10
    CHAR   shift, and go to state 11
    FLOAT  shift, and go to state 12

    $default  reduce using rule 15 (ParamDecListTail)

    ParamDecListTail  go to state 92
    ParamDecl         go to state 88
    Type              go to state 89


State 89

   17 ParamDecl: Type • ID

    ID  shift, and go to state 93


State 90

    8 VarDecl: Type ID LBRACKET INTEGER RBRACKET SEMICOLON •

    $default  reduce using rule 8 (VarDecl)


State 91

   12 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN • Block

    LBRACE  shift, and go to state 94

    Block  go to state 95


State 92

   16 ParamDecListTail: ParamDecl ParamDecListTail •

    $default  reduce using rule 16 (ParamDecListTail)


State 93

   17 ParamDecl: Type ID •

    $default  reduce using rule 17 (ParamDecl)


State 94

   18 Block: LBRACE • DeclList RBRACE

    ID         shift, and go to state 1
    INTEGER    shift, and go to state 2
    DECIMAL    shift, and go to state 3
    SEMICOLON  shift, and go to state 4
    WRITE      shift, and go to state 5
    SWRITE     shift, and go to state 6
    FUNC       shift, and go to state 7
    MINUS      shift, and go to state 8
    LPAREN     shift, and go to state 9
    INT        shift, and go to state 10
    CHAR       shift, and go to state 11
    FLOAT      shift, and go to state 12
    RETURN     shift, and go to state 13
    WRITELN    shift, and go to state 14
    CHARACTER  shift, and go to state 15

    DeclList     go to state 96
    Decl         go to state 18
    VarDecl      go to state 19
    FunDeclList  go to state 20
    FunDecl      go to state 21
    Type         go to state 22
    StmtList     go to state 23
    Stmt         go to state 24
    ArrayExpr    go to state 25
    Expr         go to state 26
    FunCall      go to state 27
    Primary      go to state 28
    MathExpr     go to state 29
    Trm          go to state 30
    Factor       go to state 31
    UnaryOp      go to state 32


State 95

   12 FunDecl: FUNC Type ID LPAREN $@1 ParamDecList RPAREN Block •

    $default  reduce using rule 12 (FunDecl)


State 96

   18 Block: LBRACE DeclList • RBRACE

    RBRACE  shift, and go to state 97


State 97

   18 Block: LBRACE DeclList RBRACE •

    $default  reduce using rule 18 (Block)
